(()=>{"use strict";const e="forecast",n="forecast__inner__list__item__data__item",t="forecast__inner__list__item__title",i="weather__inner__left__box",s="weather__inner__left__box__main",_="weather__inner__left__box__main__icon",a="weather__inner__left__box__main__temp",r="weather__inner__left__box__main__temp__value",c="weather__inner__left__box__main__temp__icon",o="weather__inner__left__box__main__description",l="weather__inner__right__item__value",d="city__name",u="display",m=`\n    <div class="${s}">\n        <svg  class="${_}">\n            <use xlink:href="img/icons/icons.svg#404"></use>\n        </svg>\n        <div class="${a}">\n            <div class="${r}">\n                <span>--</span>&deg;\n            </div>\n            <svg  class="${c}">\n                <use xlink:href="img/icons/icons.svg#metric"></use>\n            </svg>\n        </div>\n        <p class="${o}">Please, try again!</p>\n    </div>`,v=e=>{let n=document.querySelector(".weather__inner__left__title");n.textContent=`${e}`,n.classList.add(`${d}`),setTimeout((()=>{n.classList.remove(`${d}`)}),1e3)},p=async n=>{(()=>{let e=document.querySelector(`.${_}`);e.innerHTML='<use xlink:href="img/icons/icons.svg#satellite"></use>',e.classList.add("loader-satellite")})();try{const t=await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${n.city}&units=${n.units}&APPID=83de6bb90ef948d5414ac411b62cad61`),s=await t.json();if("200"===s.cod)return s;v("Oops! Your location is not found :("),document.querySelector(`.${i}`).innerHTML=m,document.querySelector(`.${_}`).classList.add("animate_404"),document.querySelectorAll(`.${l} > span`).forEach((e=>e.innerHTML="--")),document.querySelector(`.${e}`).classList.remove(`${u}`)}catch(e){console.error(e)}},h=(e,n)=>{let t=new Date(1e3*e);const i=t.getDay();let s=[a(t.getDate()),a(t.getMonth()+1)].join("."),_=[a(t.getHours()),a(t.getMinutes())].join(":");function a(e){return+e<10?"0"+e:e}return"time"===n?_:`${s}\n${["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][i]}`},g=e=>{const i=document.querySelectorAll("input[name=units]:checked");return`<li class="forecast__inner__list__item">\n                        <div class="forecast__inner__list__item__day-time">\n                            <div>${e.day}</div>\n                            <div>${e.time}</div>\n                        </div>\n                        <div class="forecast__inner__list__item__data">\n                            <div class="forecast__inner__list__item__icon ${n}">\n                                <svg  class="weather__inner__right__item__icon">\n                                    <use xlink:href="img/icons/icons.svg#${e.icon}"></use>\n                                </svg>\n                            </div>\n\n                            <div class="forecast__inner__list__item__temp ${n}">\n                                <h3 class="${t}">temp</h3>\n                                <div><span>${e.temp}</span>&deg;</div>\n                            </div>\n\n                            <div class="forecast__inner__list__item__wind ${n}">\n                                <h3 class="${t}">wind</h3>\n                                <div><span>${e.wind}</span>${"imperial"===i[0].value?"mph":"m/s"}</div>\n                            </div>\n\n                            <div class="forecast__inner__list__item__pop ${n}">\n                                <h3 class="${t}">pop</h3>\n                                <div><span>${e.pop}</span>&#37;</div>\n                            </div>\n                        </div>\n                    </li>`},$=n=>{v(n.city.name),(e=>{const n=document.querySelectorAll("input[name=units]:checked"),t=e.weather[0].icon,l=Math.round(e.main.temp),d=e.weather[0].description,u=n[0].value,m=`<div class="${s}">\n                        <svg  class="${_}">\n                            <use xlink:href="img/icons/icons.svg#${t}"></use>\n                        </svg>\n                        <div class="${a}">\n                            <div class="${r}">\n                                <span>${l}</span>&deg;\n                            </div>\n                            <svg  class="${c}">\n                                <use xlink:href="img/icons/icons.svg#${u}"></use>\n                            </svg>\n                        </div>\n                        <p class="${o}">${d}</p>\n                    </div>`;document.querySelector(`.${i}`).innerHTML=m})(n.list[0]),((e,n)=>{const t=document.querySelectorAll("input[name=units]:checked"),i=[Math.round(e.main.temp_max),Math.round(e.main.temp_min),Math.round(e.wind.speed),e.wind.deg,e.main.humidity,100*e.pop,h(n[0],"time"),h(n[1],"time")],s=["max temp","min temp","wind speed","wind deg","humidity","pop","sun rise","sun set"],_=[t[0].value,t[0].value,"wind","wind-deg","humidity","percip","sun-rise","sun-set"],a=["&deg;","&deg;","imperial"===t[0].value?"mph":"m/s","&deg;","&#37;","&#37;"," "," "];let r=[];for(let e=0;e<s.length;e++)r.push(`<div class="weather__inner__right__item">\n                <svg  class="weather__inner__right__item__icon">\n                    <use xlink:href="img/icons/icons.svg#${_[e]}"></use>\n                </svg>\n                <div class="weather__inner__right__item__label">\n                    ${s[e]}\n                </div>\n                <div class="${l}"><span>${i[e]}</span> ${a[e]}</div>\n            </div>`);document.querySelector(".weather__inner__right").innerHTML=r.join("")})(n.list[0],[n.city.sunrise,n.city.sunset]),(n=>{const t=n.list,i=[];for(let e=1;e<t.length;e++){const n={day:h(t[e].dt),time:h(t[e].dt,"time"),icon:t[e].weather[0].icon,temp:Math.round(t[e].main.temp),wind:Math.round(t[e].wind.speed),pop:Math.round(100*t[e].pop)};i.push(g(n))}document.querySelector(`.${e}`).classList.add(`${u}`),document.querySelector(".forecast__inner__list").innerHTML=i.join("")})(n)};document.getElementById("form").addEventListener("submit",(e=>(e=>{e.preventDefault();const n=document.querySelectorAll("#input-search"),t=document.querySelectorAll("input[name=units]:checked"),i={city:n[0].value,units:t[0].value};p(i).then((e=>$(e))).catch((e=>console.error(e)))})(e))),document.querySelectorAll(".header__inner__units__input").forEach((e=>{e.addEventListener("change",(e=>(e=>{e.preventDefault();const n=document.querySelectorAll("#input-search");if(""!==n[0].value){const e=document.querySelectorAll("input[name=units]:checked"),t={city:n[0].value,units:e[0].value};p(t).then((e=>$(e)))}})(e)))}))})();